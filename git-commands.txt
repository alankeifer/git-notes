
1. make a directory/repo to be tracked by git 
   >> git init  

2. add username and email 
   >> git config user.name="alan keifer" 
   >> git config user.email="keifer.alan@gmail.com" 

3. Check git logs: 
   >> git log
   >> git log --author="alan" 

4. Add files to staging area: 
   >> git add . 
   >> git add filename

5. Do a commit :
   >> git commit -m "1st commit" 

6. Check status : 
   >> git status  

7. List differences between the working copy of file 
   and the ones already in repository. 
   >> git diff 

8. Once you modify a working copy of a file and do a "git add filename" 
   then a "git diff filename"  will not show any differences that you have
   made.  
   
   "git diff" compares only the working copy and the file in repo. 
   "git diff --staged" compares the files in staging area and ones in repo. 

9. Removing files from git: 
   >>git rm filename  
   ## This will delete the working copy as well the file from the repo as well. 
   VVI : Whenever we do a "git rm" , we must do a "git commit" after that. 
   This will help to recover the deleted file if we need.  

10. Renaming files : 
    git mv old_name new_name 

11. Commiting directly to repo without placing the files in staging area. 
    ## Bypass staging area
    >> git commit -am "commiting directly to repo" 
    Note: 
     Disadvantage of directly commiting --> "-a" option will commit all 
     the changes that we have done in the working area. We may accidently 
     end up commiting changes from other edited files to the repo. 

12.      
12.


   

